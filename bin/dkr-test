#!/bin/bash

# script that runs on a host system to run tests in a container.
#

set -e

function cleanup() {
  if [[ $HOST_ON_OFF = 1 ]]
  then 
    xhost -$HOST_IP
  fi
}

trap cleanup EXIT

SCRIPT_DIR=$( dirname "$0" )
source "$SCRIPT_DIR/dkr-config"

# usually testing a specific server so use http by default
TEST_PROTO=${TEST_PROTO:-http}
if ! [[ "$PROTO" == *: ]]
then
  PROTO="$TEST_PROTO:"
fi

# this works on a linux or a mac: windows not yet supported
HOST_IP=$(ifconfig en0 | grep inet | awk '$1=="inet" {print $2}')
  
# build the docker command to run the tests in the container

TEST_CMD="${TEST_CMD:-bash bin/test} "


docker_cmd=" \
  docker run -it --rm \
  --hostname=lr-integration-test \
  --name=lr-integration-test \
  --workdir=\"$APP\" \
  --volume=\"$PWD/features:$APP/features:ro\" \
  --volume=\"$PWD/specs:$APP/specs:ro\" \
  --volume=\"$PWD/bin:/$APP/bin:ro\" \
  --volume=\"$PWD/lib:$APP/lib:ro\" \
  --add-host "lr-pres-tunnel.epimorphics.net:$HOST_IP" \
  -e IN_CONTAINER=1 \
  -e HOST_IP=\"$HOST_IP\" \
  -e TEST_BROWSER_VISIBLE=\"$TEST_BROWSER_VISIBLE\" \
  -e TEST_URL=\"$TEST_URL\" \
  -e TEST_HOST=\"$TEST_HOST\" \
  -e TEST_PROTO=\"$TEST_PROTO\" \
  -e TEST_LB=\"$TEST_LB\" \
  -e IN_CI=\"$IN_CI\" "
  
  if ! [ -z ${RECENT+x} ];
  then
    docker_cmd="$docker_cmd -e RECENT=\"$RECENT\""
  fi
  
  docker_cmd="$docker_cmd \
  \"${TEST_CONTAINER_NAME}:${TEST_CONTAINER_VERSION}\" -c \"$TEST_CMD"
  
# now append the arguments passed to this script
  
for p in "$@"
do
  docker_cmd="$docker_cmd \\\"$p\\\""
done

# and finally the closing quote

docker_cmd="$docker_cmd\""

# now show and execute it

if [[ DEBUG = 1 ]]
then
  echo "$docker_cmd"
fi

eval "$docker_cmd"

echo "test run complete"
